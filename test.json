{
    "$schema": "/home/artomb/git/devopsfaith/krakend-autocomplete/service.json",
    "@comment": "This configuration is not valid from a functionality point of view, it's only used to test the schema.",
    "_comment": "Attribute not in schema, but ignored as it starts with _",
    "$comment": "Attribute not in schema, but ignored as it starts with $",
    "#comment": "Attribute not in schema, but ignored as it starts with #",
    "version": 3,
    "name": "KrakenD configuration at MyCompany",
    "port": 8080,
    "timeout": "2s",
    "output_encoding": "json",
    "read_timeout": "10s",
    "write_timeout": "10s",
    "dialer_timeout": "10s",
    "dialer_keep_alive": "15s",
    "dialer_fallback_delay": "300ms",
    "disable_compression": false,
    "disable_keep_alives": true,
    "max_idle_connections": 0,
    "max_idle_connections_per_host": 2,
    "idle_connection_timeout": "10s",
    "response_header_timeout": "10s",
    "expect_continue_timeout": "0s",
    "disable_rest": false,
    "tls": {
        "public_key": "./cert.pem",
        "private_key": "./certs/key.pem",
        "disabled": false,
        "min_version": "TLS12",
        "max_version": "SSL3.0",
        "enable_mtls": false,
        "curve_preferences": [
            23,
            24,
            25
        ],
        "prefer_server_cipher_suites": false,
        "cipher_suites": [
            4865
        ]
    },
    "plugin": {
        "folder": "/opt/krakend/plugins/",
        "pattern": ".so"
    },
    "async_agent": [
        {
            "name": "cool-agent",
            "connection": {
                "max_retries": 10,
                "backoff_strategy":"exponential-jitter",
                "health_interval": "10s"
            },
            "consumer": {
                "topic": "*",
                "workers": 1,
                "timeout": "150ms",
                "max_rate": 0.5
            },
            "backend": [
                {
                    "host": [
                        "http://127.0.0.1:8080"
                    ],
                    "url_pattern": "/__debug/"
                }
            ],
            "extra_config": {
                "async/amqp": {
                    "name": "krakend",
                    "host": "amqp://guest:guest@localhost:5672/",
                    "exchange": "foo",
                    "durable": true,
                    "delete": false,
                    "exclusive": false,
                    "no_wait": true,
                    "prefetch_count": 5,
                    "auto_ack": false,
                    "no_local": true
                }
            }
        }
    ],
    "endpoints": [
        {
            "endpoint": "/foo/{var}",
            "method": "GET",
            "output_encoding": "json-collection",
            "querystring_params": [
                "*"
            ],
            "headers_to_pass": [
                "User-Agent"
            ],
            "concurrent_calls": 4,
            "timeout": "1500ms",
            "cache_ttl": "300s",
            "backend": [
                {
                    "url_pattern": "/foo/{var}",
                    "encoding": "json",
                    "sd": "static",
                    "method": "GET",
                    "disable_host_sanitize": false,
                    "host": [
                        "http://some_host"
                    ],
                    "target": "data",
                    "deny": [
                        "a"
                    ],
                    "allow": [
                        "b"
                    ],
                    "group": "backend1",
                    "mapping": {
                        "from": "to"
                    },
                    "is_collection": true,
                    "extra_config": {
                        "backend/pubsub/publisher": {
                            "topic_url": ""
                        },
                        "backend/pubsub/subscriber": {
                            "subscription_url": ""
                        },
                        "backend/amqp/consumer": {
                            "auto_ack": false,
                            "delete": false,
                            "durable": true,
                            "exchange": "some-exchange",
                            "name": "queue1",
                            "no_local": false,
                            "no_wait": false,
                            "prefetch_count": 10,
                            "prefetch_size": 1024,
                            "routing_key": [
                                "#"
                            ]
                        },
                        "backend/amqp/producer": {
                            "name": "queue-1",
                            "exchange": "some-exchange",
                            "durable": true,
                            "delete": false,
                            "no_wait": true,
                            "no_local": false,
                            "routing_key": "#",
                            "prefetch_count": 10,
                            "prefetch_size": 1024,
                            "mandatory": false,
                            "immediate": false
                        },
                        "backend/lambda": {
                            "endpoint": "",
                            "function_name": "",
                            "function_param_name": "",
                            "max_retries": 1,
                            "region": ""
                        },
                        "auth/client-credentials": {
                            "client_id": "ID1",
                            "client_secret": "mys3cr3t",
                            "endpoint_params": {
                                "audience": [
                                    "YOUR-AUDIENCE"
                                ]
                            },
                            "scopes": "scope1, scope2",
                            "token_url": "https://your.custom.identity.service.tld/token_endpoint"
                        },
                        "modifier/lua-proxy/backend": {
                            "allow_open_libs": true,
                            "live": true,
                            "md5": {
                                "file1.lua": "49ae50f58e35f4821ad4550e1a4d1de0"
                            },
                            "post": "print('Backend response, pre-logic:'); local r = request.load(); print(r:body());",
                            "pre": "print('Backend response, pre-logic:'); local r = request.load(); print(r:body());",
                            "skip_next": true,
                            "sources": [
                                "file1.lua"
                            ]
                        },
                        "modifier/martian": {
                            "header.Modifier": {
                                "scope": [
                                    "request",
                                    "response"
                                ],
                                "name": "X-Martian",
                                "value": "true"
                            }
                        },
                        "qos/http-cache": {},
                        "qos/circuit-breaker": {
                            "interval": 60,
                            "log_status_change": true,
                            "max_errors": 10,
                            "name": "cb-backend-1",
                            "timeout": 10
                        },
                        "qos/ratelimit/proxy": {
                            "capacity": 1,
                            "max_rate": 1
                        },
                        "proxy": {
                            "flatmap_filter": [
                                {
                                    "type": "move",
                                    "args": [
                                        "a.*.b1.*.c",
                                        "a.*.b1.*.d"
                                    ]
                                }
                            ],
                            "shadow": true
                        },
                        "backend/graphql": {
                            "operationName": "addMktPreferencesForUser",
                            "query": "{ \n find_follower(func: uid(\"0x3\")) {\n name \n }\n }",
                            "query_path": "./graphql/mutations/marketing.graphql",
                            "type": "mutation",
                            "variables": {
                                "user": "{user_id}",
                                "other_static_variables": {
                                    "foo": false,
                                    "bar": true
                                }
                            }
                        },
                        "backend/http": {
                            "return_error_details": "backend_alias"
                        }
                    }
                }
            ],
            "extra_config": {
                "validation/json-schema": {
                    "type": "object",
                    "properties": {
                        "number": {
                            "type": "number"
                        },
                        "street_name": {
                            "type": "string"
                        }
                    }
                },
                "security/cors": {
                    "allow_origins": [
                        "*"
                    ],
                    "allow_methods": [
                        "GET",
                        "HEAD",
                        "POST"
                    ],
                    "expose_headers": [
                        "Content-Length",
                        "Content-Type"
                    ],
                    "max_age": "12h",
                    "allow_headers": [
                        "Accept-Language"
                    ],
                    "allow_credentials": false,
                    "debug": false
                },
                "router": {
                    "app_engine": false,
                    "auto_options": false,
                    "disable_handle_method_not_allowed": false,
                    "disable_health": false,
                    "disable_redirect_fixed_path": false,
                    "disable_redirect_trailing_slash": false,
                    "forwarded_by_client_ip": false,
                    "health_path": "/__health",
                    "logger_skip_paths": false,
                    "max_multipart_memory": 1000,
                    "remote_ip_headers": [],
                    "remove_extra_slash": false,
                    "return_error_msg": false,
                    "trusted_proxies": []
                },
                "modifier/lua-endpoint": {
                    "allow_open_libs": true,
                    "live": true,
                    "md5": {
                        "file1.lua": "49ae50f58e35f4821ad4550e1a4d1de0"
                    },
                    "pre": "print('Backend response, pre-logic:'); local r = request.load(); print(r:body());",
                    "sources": [
                        "file1.lua"
                    ]
                },
                "modifier/lua-proxy": {
                    "pre": "print('Backend response, pre-logic:'); local r = request.load(); print(r:body());"
                },
                "qos/ratelimit/router": {
                    "client_max_rate": 10,
                    "key": "X-TOKEN",
                    "max_rate": 100,
                    "strategy": "header"
                },
                "proxy": {
                    "combiner": "combiner_name",
                    "sequential": true,
                    "static": {
                        "data": {
                            "foo": 1
                        },
                        "strategy": "always"
                    }
                },
                "security/http": {
                    "allowed_hosts": [
                        "ABC"
                    ]
                },
                "security/bot-detector": {
                    "allow": [
                        "MyAndroidClient/1.0"
                    ]
                },
                "auth/validator": {
                    "alg": "EdDSA",
                    "jwk_url": "http://KEYCLOAK:8080/auth/realms/master/protocol/openid-connect/certs",
                    "jwk_local_path": "./jwk.txt",
                    "secret_url": "awskms://keyID",
                    "cypher_key": "",
                    "cache": true,
                    "cache_duration": 900,
                    "audience": [
                        "audience1"
                    ],
                    "roles_key": "resource_access.myclient.roles",
                    "roles_key_is_nested": true,
                    "roles": [
                        "r1"
                    ],
                    "scopes": [
                        "s1"
                    ],
                    "scopes_key": "sk",
                    "scopes_matcher": "all",
                    "issuer": "issuer",
                    "cookie_key": "cookie_jwt",
                    "disable_jwk_security": true,
                    "jwk_fingerprints": [],
                    "cipher_suites": [
                        49199
                    ],
                    "jwk_local_ca": "./ca",
                    "propagate_claims": [
                        "c1"
                    ],
                    "key_identify_strategy": "kid",
                    "operation_debug": true
                },
                "auth/signer": {
                    "alg": "EdDSA",
                    "cipher_suites": [
                        49199,
                        49195,
                        49200,
                        49196,
                        52392,
                        52393
                    ],
                    "disable_jwk_security": true,
                    "full": false,
                    "jwk_fingerprints": [],
                    "jwk_local_ca": "",
                    "jwk_url": "http://your-backend/jwk/symmetric.json",
                    "keys_to_sign": [
                        "access_token"
                    ],
                    "kid": "sim2"
                }
            }
        }
    ],
    "extra_config": {
        "security/bot-detector": {
            "allow": [
                "MyAndroidClient/1.0"
            ],
            "cache_size": 100,
            "deny": [
                "facebookexternalhit/1.1"
            ],
            "patterns": [
                "(facebookexternalhit)/.*"
            ]
        },
        "security/cors": {
            "allow_origins": [
                "*"
            ],
            "allow_methods": [
                "POST",
                "GET"
            ],
            "allow_headers": [
                "Accept-Language"
            ],
            "expose_headers": [
                "Header-1"
            ],
            "max_age": "15h",
            "allow_credentials": true,
            "debug": true
        },
        "security/http": {
            "allowed_hosts": [
                "host.known.com:443"
            ],
            "ssl_proxy_headers": {
                "X-Forwarded-Proto": "https"
            },
            "host_proxy_headers": [
                "X-Forwarded-Hosts"
            ],
            "ssl_redirect": true,
            "ssl_host": "ssl.host.domain",
            "sts_seconds": 300,
            "sts_include_subdomains": true,
            "frame_deny": true,
            "referrer_policy": "same-origin",
            "custom_frame_options_value": "ALLOW-FROM https://example.com",
            "hpkp_public_key": "pin-sha256=\"base64==\"; max-age=expireTime [; includeSubDomains][; report-uri=\"reportURI\"]",
            "content_type_nosniff": true,
            "browser_xss_filter": true,
            "content_security_policy": "default-src 'self';",
            "is_development": true
        },
        "telemetry/logging": {
            "level": "CRITICAL",
            "prefix": "[KRAKEND]",
            "stdout": true,
            "syslog": false,
            "format": "custom",
            "custom_format": "%{message}"
        },
        "telemetry/logstash": {
            "enabled": false
        },
        "telemetry/gelf": {
            "address": "myGraylogInstance:12201",
            "enable_tcp": false
        },
        "telemetry/influx":{
            "address":"http://192.168.99.9:8086",
            "ttl":"25s",
            "buffer_size":0,
            "db": "krakend",
            "username": "your-influxdb-user",
            "password": "your-influxdb-password"
        },
        "telemetry/metrics": {
            "backend_disabled": false,
            "collection_time": "60s",
            "endpoint_disabled": false,
            "listen_address": ":8090",
            "proxy_disabled": false,
            "router_disabled": false
        },
        "telemetry/opencensus": {
            "sample_rate": 100,
            "reporting_period": 2,
            "enabled_layers": {
                "backend": false,
                "pipe": true,
                "router": false
            },
            "exporters": {
                "logger": {
                    "spans": false,
                    "stats": false
                },
                "zipkin": {
                    "collector_url": "http://192.168.99.100:9411/api/v2/spans",
                    "service_name": "krakend"
                },
                "jaeger": {
                    "endpoint": "http://192.168.99.100:14268/api/traces",
                    "service_name": "krakend"
                },
                "influxdb": {
                    "address": "http://192.168.99.100:8086",
                    "db": "krakend",
                    "timeout": "1s",
                    "password": "kr4k3nd",
                    "username": "krakend"
                },
                "prometheus": {
                    "namespace": "krakend",
                    "port": 9091,
                    "tag_host": false,
                    "tag_method": false,
                    "tag_path": false,
                    "tag_statuscode": false
                },
                "xray": {
                    "access_key_id": "dasdasdas",
                    "secret_access_key": "dadasdasd",
                    "region": "eu-west-1",
                    "use_env": false,
                    "version": "latest"
                },
                "stackdriver": {
                    "default_labels": {
                        "env": "production"
                    },
                    "metrics_prefix": "krakend",
                    "project_id": "1234"
                },
                "datadog": {
                    "disable_count_per_buckets": false,
                    "global_tags": {
                        "env": "prod"
                    },
                    "namespace": "krakend",
                    "service": "gateway",
                    "stats_address": "localhost:8125",
                    "tags": [
                        "A"
                    ],
                    "trace_address": "localhost:8126"
                },
                "ocagent": {
                    "address": "localhost:55678",
                    "enable_compression": false,
                    "headers": {
                        "header1": "value1"
                    },
                    "insecure": true,
                    "reconnection": "2s",
                    "service_name": "krakend"
                }
            }
        },
        "auth/revoker": {
            "hash_name": "default",
            "N": 10000000,
            "P": 1e-7,
            "port": 1234,
            "token_keys": [
                "jti"
            ],
            "TTL": 1500
        }
    }
}